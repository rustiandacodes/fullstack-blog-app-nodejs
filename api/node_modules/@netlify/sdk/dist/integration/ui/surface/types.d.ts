import { UIElementOptions, UIElementButtonOptions, UIElementCardOptions, UIElementFormOptions, UIElementInputTextOptions, SurfaceInputsData, UIElementTextOptions, IntegrationContext, UIElementSectionOptions, UIElementInputPasswordOptions, UIElementLinkOptions, UIElementConnectionOptions, UIElementInputSelectOptions, UIElementUnorderedListOptions, UIElementOrderedListOptions, UIElementDisableIntegrationSectionOptions, UIElementCodeSnippetOptions, SurfaceDefinition, UIElementAlertOptions } from "../types";
export interface SurfaceState {
    surfaceData: unknown;
    surfaceConfig: SurfaceDefinition;
    surfaceRouteConfig: Array<UIElementOptions>;
    surfaceInputsData: SurfaceInputsData;
    integrationContext: IntegrationContext;
    integrationNavigation: {
        navigateTo: (path: string) => void;
        navigateExternally: (url: string) => void;
        href: string;
        hash: string;
        search: string;
    };
    fetch: typeof fetch;
    picker: {
        getElementById: <T extends UIElementOptions>(id: string) => T | undefined;
        getFormElementById: <T extends UIElementOptions>(formId: string, id: string) => T | undefined;
        getFormInputValue: (formId: string, id: string) => string | undefined;
        setFormInputValue: (formId: string, id: string, value: string) => void;
    };
}
export type CallbackFunc = (state: SurfaceState) => Promise<Partial<SurfaceState>> | Partial<SurfaceState> | Promise<void> | void;
export type InteractionCallbackFunc = (state: SurfaceState, value: string | number | boolean) => Promise<Partial<SurfaceState>> | Partial<SurfaceState> | Promise<void> | void;
export interface ButtonElementOptions extends Omit<UIElementButtonOptions, "type"> {
    callback: CallbackFunc;
    id: string;
}
export type TextElementOptions = Omit<UIElementTextOptions, "type">;
export type CardElementOptions = Omit<UIElementCardOptions, "type" | "contents">;
export type InputTextElementOptions = Omit<UIElementInputTextOptions, "type" | "persistAs">;
export type InputPasswordElementOptions = Omit<UIElementInputPasswordOptions, "type" | "persistAs">;
export type InputSelectElementOptions = Omit<UIElementInputSelectOptions, "type">;
export type AlertElementOptions = Omit<UIElementAlertOptions, "type">;
export type DisableIntegrationSectionElementOptions = Omit<UIElementDisableIntegrationSectionOptions, "type">;
export type CodeSnippetOptions = Omit<UIElementCodeSnippetOptions, "type">;
export type LinkElementOptions = Omit<UIElementLinkOptions, "type">;
export interface FormElementOptions extends Omit<UIElementFormOptions, "type" | "contents"> {
    id: string;
    onSubmit?: CallbackFunc;
    variant?: "default" | "settings";
    hideCancel?: boolean;
}
export interface SectionElementOptions extends Omit<UIElementSectionOptions, "type" | "contents"> {
    description: string;
}
export type ConnectionElementOptions = Omit<UIElementConnectionOptions, "type">;
export type UnorderedListElementOptions = Omit<UIElementUnorderedListOptions, "type">;
export type OrderedListElementOptions = Omit<UIElementOrderedListOptions, "type">;
