import { UIElementOptions } from "../types";
import { ButtonElementOptions, CardElementOptions, FormElementOptions, ConnectionElementOptions, InputPasswordElementOptions, InputTextElementOptions, LinkElementOptions, SectionElementOptions, InputSelectElementOptions, TextElementOptions, CallbackFunc, UnorderedListElementOptions, OrderedListElementOptions, DisableIntegrationSectionElementOptions, CodeSnippetOptions, InteractionCallbackFunc, AlertElementOptions } from "./types";
export declare class Surface {
    private _elements;
    private _callbacks;
    private _formCallbacks;
    private _interactiveCallbacks;
    private _formId?;
    private _useIdentity;
    get elements(): UIElementOptions[];
    get callbacks(): Record<string, CallbackFunc>;
    get formCallbacks(): Record<string, CallbackFunc>;
    get interactiveCallbacks(): Record<string, InteractionCallbackFunc>;
    get useIdentity(): boolean;
    constructor();
    addText(options: TextElementOptions): this;
    addLink(options: LinkElementOptions): this;
    addButton(options: ButtonElementOptions): this;
    addUnorderedList(options: UnorderedListElementOptions): this;
    addOrderedList(options: OrderedListElementOptions): this;
    addSection(options: SectionElementOptions, builder: (section: Surface) => void): this;
    addCard(options: CardElementOptions, builder: (card: Surface) => void): this;
    addInputText(options: InputTextElementOptions): this;
    addInputSelect(selectOptions: InputSelectElementOptions): this;
    addInputPassword(options: InputPasswordElementOptions): this;
    addAlert(options: AlertElementOptions): this;
    addForm(options: FormElementOptions, builder: (form: Surface) => void): this;
    addOAuthCard(options: ConnectionElementOptions): this;
    addDisableIntegrationSection(options: DisableIntegrationSectionElementOptions): this;
    addCodeSnippet(options: CodeSnippetOptions): this;
}
export declare class SurfaceRoute extends Surface {
    private _path;
    private _onLoadCallbacks;
    get path(): string;
    get onLoadCallbacks(): CallbackFunc[];
    constructor(path: string);
    onLoad(callback: CallbackFunc): this;
}
