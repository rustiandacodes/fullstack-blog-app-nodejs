export interface BuildOpts {
    /** Build all components of the integration */
    all?: boolean;
    /** Build the buildtime component of the integration */
    buildtime?: boolean;
    /** Build the serverless component of the integration */
    site?: boolean;
    /** Build the Netlify Connect plugin of the integration */
    connector?: boolean;
    /** Build integration and then watch for changes */
    watch?: boolean;
    /** The directory to build to */
    dir?: string;
    /** Preview URL used test the integration UI */
    previewUrl?: string;
}
export declare const build: (opts: BuildOpts) => Promise<false | {
    packageName: any;
    integration: import("../../index.js").NetlifyIntegration<import("zod").ZodUnknown, import("zod").ZodUnknown, import("zod").ZodUnknown, import("zod").ZodUnknown>;
    onRebuild: (listener: () => void | Promise<void>) => void;
    pwd: string;
    slug: string;
} | undefined>;
